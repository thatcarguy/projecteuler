package prob1to10;

/**
 * Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 * @author Duke
 *
 */
public class EvenFibs {

	private static int sum = 0;
	public static void main(String[] args){
		int n = 35;
		System.out.println(dpApproach(n));
		System.out.println(dpNoSpace(n));
	}
	
	private static int fib(int n){
		System.out.println(n);
		if(n<=1){
			return n;
		}
		if(!((n&1)==1)){
			sum+=n;
		}
		return fib(n-1)+fib(n-2);
	}
	//O(n) time o(n) space
	private static long dpApproach(int n){
		int fibArray[] = new int[n+2];
		long sum = 0;
		fibArray[0]=0;
		fibArray[1]=1;
		
		for(int i=2;i<=n;i++){
			
			if(fibArray[i-1]>4000000){
				
				System.out.println("Max reached at Fib: "+(i-1)+" with a value of "+ fibArray[i-1]);
				return sum;
			}
			fibArray[i] = fibArray[i-1]+fibArray[i-2];
			if((fibArray[i]&1)!=1){
				sum+=fibArray[i];
			}
		}
		return sum;

	}
	//O(n) time O(1) space
	private static int dpNoSpace(int n){
		int sum =0;
		int c=0,b=1,a=0;
		for(int i =2;i<=n;i++){
			if((a+b)>4000000){
				System.out.println("Max reached at Fib: "+(i)+" with a value of "+ (a+b));
				return sum;
			}
			c = a+b;
			a=b;
			b=c;
			if((c&1)!=1){
				sum+=c;
			}
		}
		return sum;
		
	}
}
